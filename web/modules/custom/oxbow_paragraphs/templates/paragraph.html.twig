{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{% extends oxbow_paragraphs.path_module ~ '/templates/_paragraphs--base.html.twig' %}

{%
set classes = [
  'paragraph',
  'paragraph--id-' ~ paragraph.id.value,
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
]
%}

{#% include 'paragraphs--settings.html.twig' %#}

{% set debug = false %}

{% set p_id = ' id="paragraph-' ~ paragraph.id.value ~ '"' %}
{% set p_data = null %}
{% set p_tag = null %}

{% set settings = oxbow_paragraphs.settings %}

{# TITLES #}
{% set p_title_text = paragraph.field_p_title.value %}
{% set p_title_html = null %}
 
{% if p_title_text is empty %}
    {% set p_title_text = null %}
{% endif %}

{% if p_title_text %}
  {% set p_title_html = '<h2>' ~ p_title_text ~ '</h2>' %}
  
  {% if settings.title.link %}
      {% set p_title_html = '<a href="' ~ settings.title.link ~ '">' ~ p_title_html ~ '</a>' %}
  {% endif %}
{% endif %}

{% if settings.title and p_title_text %}
  {% set classes = classes | merge(['title-' ~ settings.title.visible]) %}
  {% set classes = classes | merge(['title-align-' ~ settings.title.align]) %}
{% else %}
  {% set classes = classes | merge(['title-false']) %}
{% endif %}

{# TAG #}
{% if paragraph.field_p_tag.value | length > 0 %}
  {% set p_tag = paragraph.field_p_tag.value %}
  {% set p_data = p_data ~ ' data-tag="' ~ p_tag ~ '"' %}
{% endif %}

{# TEXT #}
{% if settings.text %}
  {% set classes = classes | merge(['text-size-' ~ settings.text.size]) %}
  {% set classes = classes | merge(['text-color-' ~ settings.text.color_key]) %}
{% endif %}

{# BACKGROUND #}
{% if settings.background %}
  {% set classes = classes | merge(['background-type-' ~ settings.background.type]) %}
{% endif %}

{# SIZE #}
{% if settings.size.padding %}
  {% set classes = classes | merge(['padding-top-' ~ settings.size.padding.t]) %}
  {% set classes = classes | merge(['padding-bottom-' ~ settings.size.padding.b]) %}
  {% set classes = classes | merge(['padding-left-' ~ settings.size.padding.l]) %}
  {% set classes = classes | merge(['padding-right-' ~ settings.size.padding.r]) %}
{% endif %}
{% if settings.size.margin %}
  {% set classes = classes | merge(['margin-top-' ~ settings.size.margin.t]) %}
  {% set classes = classes | merge(['margin-bottom-' ~ settings.size.margin.b]) %}
  {% set classes = classes | merge(['margin-left-' ~ settings.size.margin.l]) %}
  {% set classes = classes | merge(['margin-right-' ~ settings.size.margin.r]) %}
{% endif %}
{% if settings.size %}
  {% if settings.size.width != 'true' %}
    {% set classes = classes | merge(['constrain-none']) %}
  {% endif %}
{% endif %}

{# LAYOUT #}
{% if settings.layout %}
  {% set classes = classes | merge(['layout-type-' ~ settings.layout.type]) %}
  {% if settings.layout.padding %}
    {% set classes = classes | merge(['layout-padding-' ~ settings.layout.padding]) %}
  {% endif %}
  {% if settings.layout['h-align'] %}
    {% set classes = classes | merge(['layout-h-align-' ~ settings.layout['h-align']]) %}
  {% endif %}
  {% if settings.layout.type == 'columns' %}
    {% set classes = classes | merge(['layout-direction-' ~ settings.layout.direction]) %}
    {% set classes = classes | merge(['layout-align-' ~ settings.layout.align]) %}
  {% endif %}
  {% if settings.layout.type == 'slides' %}
    {% set slide_data = " data-slick='{" %}
    {% set slide_data = slide_data ~ '"slidesToShow":' ~ settings.layout.slides.show %}
    {% set slide_data = slide_data ~ ', "slidesToScroll":' ~ settings.layout.slides.show %}
    {% set slide_data = slide_data ~ ', "infinite":true' %}
    {% set slide_data = slide_data ~ ', "pauseOnHover":true' %}
    {% set slide_data = slide_data ~ ', "arrows":' ~ settings.layout.slides.arrows %}
    {% if settings.layout.slides.speed != 0  %}
      {% set slide_data = slide_data ~ ', "autoplay":true' %}
    {% else %}
      {% set slide_data = slide_data ~ ', "autoplay":false' %}
    {% endif %}
    {% set slide_data = slide_data ~ ', "autoplaySpeed":' ~ (settings.layout.slides.speed * 1000) %}
    {% set slide_data = slide_data ~ "}'" %}
    {% set p_data = p_data ~ slide_data %}
    {% set classes = classes | merge(['layout-align-' ~ settings.layout.slides.align]) %}
  {% endif %}
  {% if settings.layout.type == 'tabs' %}
    {% if settings.layout.tabs.align %}
      {% set classes = classes | merge(['layout-tabs-align-' ~ settings.layout.tabs.align]) %}
    {% endif %}
  {% endif %}
  {% if settings.layout.type == 'accordion' %}
    {% if settings.layout.accordion.collapse == 'off' %}
      {% set classes = classes | merge(['layout-accordion-collapse']) %}
    {% endif %}
  {% endif %}
{% endif %}

{# ACCORDION #}
{% if 'accordion' in paragraph.oxbow_paragraphs.display %}
  {% set p_accordion_html = '<h3 class="accordion__title">' ~ p_tag ~ '</h3><div class="accordion__button"><span class="open">â€“ </span><span class="closed">+</span></div>' %}
{% endif %}

{# IMAGE #}
{% if settings.image %}
  {% set classes = classes | merge(['content-size-' ~ settings.image.size]) %}
  {% set classes = classes | merge(['content-align-' ~ settings.image.align]) %}
{% endif %}

{# CLASSES #}
{% if settings.classes %}
  {% set classes = classes | merge([settings.classes]) %}
{% endif %}


{#
  set BLOCKS output
  available blocks:
    - p_debug
    - p_styles
    - p_bg
    - p_title
    - p_content
#}

{# create paragraph DEBUG #}
{% block p_debug %}
  {% if debug %}
    {#% include oxbow_paragraphs.path_module ~ '/templates/_paragraphs--debug.html.twig' %#}
  {% endif %}
{% endblock %}

{# create paragraph STYLES #}
{% block p_styles %}
  {% include oxbow_paragraphs.path_module ~ '/templates/_paragraphs--styles.html.twig' %}
{% endblock %}

{# create paragraph BACKGROUND #}
{% block p_bg %}
  {% if settings.background.type == 'video' and settings.background.video.url %}
    <video class="size-{{ settings.background.video.size }}" autoplay muted{% if settings.background.video.loop == 'true' %} loop{% endif %}>
      <source src="{{ settings.background.video.url }}" type="video/mp4">
    </video>
  {% endif %}
{% endblock %}

{# create paragraph TITLE #}
{% block p_title %}
  {{ p_title_html | raw }}
{% endblock %}

{# create paragraph CONTENT #}
{% block p_content %}
  {% if paragraph.bundle == 'image' %}
    {% include oxbow_paragraphs.path_module ~ '/templates/_paragraphs--image.html.twig' %}
  {% elseif paragraph.bundle == 'video' %}
    {% include oxbow_paragraphs.path_module ~ '/templates/_paragraphs--video.html.twig' %}
  {% elseif paragraph.bundle == 'iframe' %}
    {% include oxbow_paragraphs.path_module ~ '/templates/_paragraphs--iframe.html.twig' %}
  {% elseif paragraph.bundle == 'view' %}
    {% include oxbow_paragraphs.path_module ~ '/templates/_paragraphs--view.html.twig' %}
  {% elseif paragraph.bundle == 'misc' %}
    {% include oxbow_paragraphs.path_module ~ '/templates/_paragraphs--misc.html.twig' %}
  {% else %}
    {{ content | without('field_p_tag', 'field_p_title', 'field_p_settings') }}
  {% endif %}
{% endblock %}

